#(example (utterance "number of people that are friends of me")       (targetFormula (call edu.stanford.nlp.sempre.NormalFormExecutor.normalize (tt:root.question.value (count (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))
#(example (utterance "people that friends of me")                     (targetFormula (call edu.stanford.nlp.sempre.NormalFormExecutor.normalize (tt:root.question.value ((reverse foaf:name) (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))
#
#
## some liberal paraphrases of the questions above
#(example (utterance "how many friends do I have?") (targetFormula (call edu.stanford.nlp.sempre.thingpedia.SparqlConverter.executeAndWrap (tt:root.question.value (count (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))
#(example (utterance "count my friends")            (targetFormula (call edu.stanford.nlp.sempre.thingpedia.SparqlConverter.executeAndWrap (tt:root.question.value (count (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))
#(example (utterance "how many are my friends?")    (targetFormula (call edu.stanford.nlp.sempre.thingpedia.SparqlConverter.executeAndWrap (tt:root.question.value (count (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))
#(example (utterance "who are my friends?")         (targetFormula (call edu.stanford.nlp.sempre.thingpedia.SparqlConverter.executeAndWrap (tt:root.question.value ((reverse foaf:name) (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))
#(example (utterance "who is my friend?")           (targetFormula (call edu.stanford.nlp.sempre.thingpedia.SparqlConverter.executeAndWrap (tt:root.question.value ((reverse foaf:name) (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))
#(example (utterance "list my friends")             (targetFormula (call edu.stanford.nlp.sempre.thingpedia.SparqlConverter.executeAndWrap (tt:root.question.value ((reverse foaf:name) (and (rdf:type foaf:Person) (foaf:knows tt:me)))))))

(example (utterance "if receive tweet on twitter and from is Giovanni then send message on slack with message is new post")
    (targetFormula
        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.jsonOut
            (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.ifttt
                (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.trigParam
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.trigParam
                        tt:twitter.source
                    )
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.paramForm
                        (string String) tt:param.from (string is)
                        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.stringValueCast
                            (string giovanni)
                        )
                    )
                )
                (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.actParam
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.actParam
                        tt:slack.send
                    )
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.paramForm
                        (string String) tt:param.message (string is)
                        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.stringValueCast
                            (string "new post")
                        )
                    )
                )
            )
        )
    )
)

(example (utterance "if receive message on slack and from user is Giovanni then share on linkedin with comment is new dm")
    (targetFormula
         (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.jsonOut
            (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.ifttt
                (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.trigParam
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.trigParam
                        tt:slack.receive
                    )
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.paramForm
                        (string String) tt:param.from_user (string is)
                        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.stringValueCast
                            (string giovanni)
                        )
                    )
                )
                (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.actParam
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.actParam
                        tt:linkedin.share
                    )
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.paramForm
                        (string String) tt:param.comment (string is)
                        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.stringValueCast
                            (string "new dm")
                        )
                    )
                )
            )
        )
    )
)

(example (utterance "if get profile from linkedin then send dm on twitter with message is new dm")
    (targetFormula
        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.jsonOut
            (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.ifttt
                (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.trigParam
                    tt:linkedin.profile
                )
                (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.actParam
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.actParam
                        tt:twitter.send_direct_message
                    )
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.paramForm
                        (string String) tt:param.message (string is)
                        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.stringValueCast
                            (string "new dm")
                        )
                    )
                )
            )
        )
    )
)

(example (utterance "if receive dm on twitter and from is Xiangyu then update status on slack with presence is away")
    (targetFormula
        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.jsonOut
            (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.ifttt
                (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.trigParam
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.trigParam
                        tt:twitter.direct_message
                    )
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.paramForm
                        (string String) tt:param.from (string is)
                         (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.stringValueCast
                            (string "xiangyu")
                        )
                    )
                )
                (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.actParam
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.actParam
                        tt:slack.setPresence
                    )
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.paramForm
                        (string String) tt:param.presence (string is)
                        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.stringValueCast
                            (string "away")
                        )
                    )
                )
            )
        )
    )
)

(example (utterance "if receive tweet on twitter and hashtags has Trump and text contains make america great then update status on slack with presence is away")
    (targetFormula
         (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.jsonOut
            (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.ifttt
                (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.trigParam
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.trigParam
                        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.trigParam
                            tt:twitter.source
                        )
                        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.paramForm
                            (string String) tt:param.hashtags (string has)
                            (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.stringValueCast
                                (string "trump")
                            )
                        )
                    )
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.paramForm
                        (string String) tt:param.text (string contains)
                        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.stringValueCast
                            (string "make america great")
                        )
                    )
                )
                (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.actParam
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.actParam
                        tt:slack.setPresence
                    )
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.paramForm
                        (string String) tt:param.presence (string is)
                        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.stringValueCast
                            (string "away")
                        )
                    )
                )
            )
        )
    )
)


(example (utterance "if humidity changes on nest and value is 20 then set target temperature on nest with value is 15 C")
    (targetFormula
        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.jsonOut
            (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.ifttt
                (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.trigParam
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.trigParam
                        tt:thermostat.humidity
                    )
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.paramForm
                        (string Number) tt:param.value (string >)
                        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.numValueCast
                            (number 20)
                        )
                    )
                )
                (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.actParam
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.actParam
                        tt:thermostat.set_target_temperature
                    )
                    (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.paramForm
                        (string Measure) tt:param.value (string is)
                        (call edu.stanford.nlp.sempre.thingtalk.ThingTalk.tempValueCast
                            (string C) (number 15)
                        )
                    )
                )
            )
        )
    )
)
